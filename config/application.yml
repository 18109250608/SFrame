# Server configuration
server:
  port: 8090

###################  自定义项目配置 ###################
selfDefine:
  author: mzh
  msgStart: Hello
  msgEnd: Bye-bye

xncoding:
#  socketHostname: localhost
#  socket-port: 9090


#开发配置
spring:
  profiles:
    active: dev

  devtools:
    remote:
      secret: thisismysecret

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false

  datasource:
    url: jdbc:mysql://192.168.1.199:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: root
    driverClassName: com.mysql.cj.jdbc.Driver
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    spring.datasource.filters: stat,wall,log4j
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  data:
    mongodb:
      host: 192.168.1.199
      port: 27017
      database: test
      username: test
      password: test
#      # 多数据源做下面的设置
#      primary:
#        uri:  mongodb://192.168.1.199:27017/test
#        host: 192.168.1.199
#        port: 27017
#        database: test
#        username: admin
#        password: admin
    #  secondary:
    #    host: 192.168.9.60
    #    port: 20000
    #    database: test1

  #    # 全文检索 elasticsearch
  #    elasticsearch:
  #      cluster-name: elasticsearch #节点名称
  #      cluster-nodes: 127.0.0.1:9300 #节点地址
  #      repositories:
  #        enabled: true

##mybatis mapperLocations指的路径是src/main/resources
#mybatis:
#  typeAliasesPackage: com.demo.entity
#  mapperLocations: classpath:mapper/*.xml

#mybatis-plus
mybatis-plus:
  typeAliasesPackage: com.demo.entity
  mapperLocations: classpath:mapper/*Mapper.xml
  globalConfig:
    idType: 3  #0:数据库ID自增   1:用户输入id  2:全局唯一id(IdWorker)  3:全局唯一ID(uuid)
    dbColumnUnderline: false
    refresh: true
  configuration:
    mapUnderscoreToCamelCase: true
    cacheEnabled: true #配置的缓存的全局开关
    lazyLoadingEnabled: true #延时加载的开关
    multipleResultSetsEnabled: true #开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性
    logImpl: org.apache.ibatis.logging.stdout.StdOutImpl #打印sql语句,调试用


# JWT
jwt:
  header: Authorization
  secret: mySecret
  expiration: 604800
  tokenHead: "Bearer "
  route:
    authentication:
      path: auth
      refresh: "auth/refresh"
      register: "auth/register"

#logging:
#  level:
#    org.springframework:
#      data: DEBUG
#      security: DEBUG

swagger2:
  # 公共信息
  enabled: true
  title: java整合demo
  description: 一个Swagger测试项目
  version: 0.1-SNAPSHOT
  # 许可证及服务条款信息
#  license:
#  licenseUrl:
  termsOfServiceUrl: http://localhost:8090/swagger-ui.html
  contact:
    name: mzh
    url: http://localhost:8090/swagger-ui.html
    email: mzh@gmail.com
  basePackage: com.demo.controller
#  globalOperationParameters[0]:
#    name: TOKEN
#    description: 鉴权
#    modelRef: string
#    parameterType: header
#    # 公共参数写成requierd, 对于不需要登录的接口随便写一个字符串即可
#    required: true
#    # 通用返回错误码
#    applyDefaultResponseMessages: true
#    globalResponseMessage.get[0]:
#      code: 401
#      message: 401错误
#    globalResponseMessage.get[1]:
#      code: 500
#      message: 后端错误
#      modelRef: ERROR
  docket:
    apiForMe:
      title: Myself
      description: 开放给自己的接口
      basePath: /api/myself/**
    apiForOthers:
      title: Others
      description: 作为其他人的接口
      basePath: /api/others/**